# thanks, https://github.com/aeolyus/homelab/blob/master/bitwarden/tasks/main.yml
---
- name: pull bitwarden container image
  containers.podman.podman_image:
    name: "{{ bw_container }}"
    state: present

- name: check bitwarden env file
  ansible.builtin.stat:
    path: /data/bitwarden/.env
  register: bitwarden_env

- name: generate bitwarden admin token
  ansible.builtin.set_fact:
    bitwarden_admin_token: >-
      "{{ lookup('password', '/dev/null length=16 chars=ascii_letters') }}"
  when: not bitwarden_env.stat.exists

- name: announce bitwarden admin token
  ansible.builtin.debug:
    msg: "Bitwarden admin token: {{ bitwarden_admin_token }}"
  when: not bitwarden_env.stat.exists

- name: ensure bitwarden data directory exists
  ansible.builtin.file:
    path: /data/bitwarden/
    state: directory
    mode: 0700
  when: not bitwarden_env.stat.exists

- name: copy bitwarden env file
  ansible.builtin.template:
    src: .env.j2
    dest: /data/bitwarden/.env
    mode: 0700
  when: not bitwarden_env.stat.exists

- name: check to see if systemd service file exists already
  ansible.builtin.stat:
    path: /etc/systemd/system/container-bitwarden.service
  register: bitwarden_service

# localhost only so the reverse proxy can handle TLS termination for us
- name: start bitwarden
  containers.podman.podman_container:
    name: bitwarden
    image: "{{ bw_container }}"
    state: present
    network: slirp4netns
    publish:
      - 127.0.0.1:{{ bw_net_port }}:80
      - 127.0.0.1:{{ bw_wss_port }}:3012
    volume:
      - /data/bitwarden/:/data/:Z
    cmd_args:
      - "--env-file=/data/bitwarden/.env"
    healthcheck: "curl localhost:{{ bw_net_port }}/alive"
  register: bitwarden_command_result
  when: not bitwarden_service.stat.exists

- name: generate systemd service
  ansible.builtin.shell:
    cmd: >-
      podman generate systemd --name bitwarden >
      /etc/systemd/system/container-bitwarden.service
    creates: /etc/systemd/system/container-bitwarden.service
  when:
    - not bitwarden_service.stat.exists
    - bitwarden_command_result.changed

- name: stop bitwarden so systemd can take over
  containers.podman.podman_container:
    name: bitwarden
    image: "{{ bw_container }}"
    state: stopped
  when:
    - not bitwarden_service.stat.exists
    - bitwarden_command_result.changed

- name: start systemd container-bitwarden service
  ansible.builtin.service:
    name: container-bitwarden
    state: started
    enabled: true
    daemon-reload: true

- name: add service to reverse proxy
  include_tasks:
    file: roles/caddy/tasks/add_service.yml
    apply:
      vars:
        caddyfile_block: |-
          passwords.{{ domain }} {
            reverse_proxy /notifications/hub/negotiate  localhost:{{ bw_net_port }}
            reverse_proxy /notifications/hub/           localhost:{{ bw_wss_port }}
            reverse_proxy /*                            localhost:{{ bw_net_port }}
          }
