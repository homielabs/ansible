---
- name: distro specific package management
  include_tasks: "{{ ansible_distribution | lower }}.yml"

- name: install caddy
  ansible.builtin.package:
    name: caddy
    state: present

- name: determine if Caddyfile is ansible-managed
  ansible.builtin.lineinfile:
    path: "{{ caddy_config_location }}"
    regexp: "ANSIBLE MANAGED"
    state: absent
  check_mode: true
  changed_when: false
  register: caddyfile_ansible_managed

# this has the nasty side effect of removing everything, including things
# under block control
- name: remove default config
  ansible.builtin.file:
    path: "{{ caddy_config_location }}"
    state: absent
  when: not caddyfile_ansible_managed.found

- name: setup caddy config
  ansible.builtin.blockinfile:
    path: "{{ caddy_config_location }}"
    marker: "# {mark} ANSIBLE MANAGED config"
    block: |
      {
        email {{ email }}
        admin off
        {% if caddy_acme_ca is defined %}
        acme_ca {{ caddy_acme_ca }}
        {% endif %}

        servers {
          protocol {
            experimental_http3
          }
        }
      }
    create: true
    mode: 0644
    insertbefore: BOF # beginning of file, so at the very top
    validate: caddy adapt --config %s --validate

- name: setup example service
  import_tasks: example_service.yml
  when: deploy_example_service

- name: figure out if firewalld exists
  ansible.builtin.command:
    cmd: command -v firewalld
  register: firewalld_exists
  changed_when: false
  failed_when: false

- name: enable http/s in firewalld
  import_tasks: roles/firewalld/handlers/main.yml
  vars:
    firewalld_services:
      - http
      - https
  when: firewalld_exists.rc == 0

- name: enable caddy service
  ansible.builtin.service:
    name: caddy
    state: started
    enabled: true
