---
- name: "pull netmaker-ui container"
  containers.podman.podman_image:
    name: "{{ netmaker_ui_container }}"
    state: "present"

- name: check to see if systemd service file exists already
  ansible.builtin.stat:
    path: "/etc/systemd/system/container-netmaker-ui.service"
  register: "netmaker_ui_service"

- name: "start netmaker-ui container"
  containers.podman.podman_container:
    name: "netmaker-ui"
    image: "{{ netmaker_ui_container }}"
    state: "present"
    network: "slirp4netns"
    publish:
      - "127.0.0.1:8082:80"
    env:
      BACKEND_URL: "https://api.{{ service }}.{{ domain }}"
    healthcheck: "curl localhost:80"
  register: "netmaker_ui_command_result"
  when: "not netmaker_ui_service.stat.exists"

- name: "generate systemd service"
  ansible.builtin.shell:
    cmd: >-
      podman generate systemd --name netmaker-ui >
      /etc/systemd/system/container-netmaker-ui.service
    creates: "/etc/systemd/system/container-netmaker-ui.service"
  when:
    - "not netmaker_ui_service.stat.exists"
    - "netmaker_ui_command_result.changed"

- name: "stop netmaker-ui so systemd can take over"
  containers.podman.podman_container:
    name: "netmaker-ui"
    image: "{{ netmaker_ui_container }}"
    state: "stopped"
  when:
    - "not netmaker_ui_service.stat.exists"
    - "netmaker_ui_command_result.changed"

- name: "start systemd container-netmaker-ui service"
  ansible.builtin.service:
    name: "container-netmaker-ui"
    state: "started"
    enabled: true
    daemon-reload: true
