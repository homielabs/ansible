---
- name: "pull rabbitmq container"
  containers.podman.podman_image:
    name: "{{ rabbitmq_container }}"
    state: "present"

- name: "check to see if systemd service file exists already"
  ansible.builtin.stat:
    path: "/etc/systemd/system/container-rabbitmq.service"
  register: "rabbitmq_service"

- name: "create /data/rabbitmq"
  ansible.builtin.file:
    path: "/data/rabbitmq"
    state: "directory"
    mode: "0755"

- name: "configure rabbitmq"
  ansible.builtin.copy:
    src: "files/"
    dest: "/data/rabbitmq/"
    mode: "0644"

- name: "start rabbitmq container"
  containers.podman.podman_container:
    name: "rabbitmq"
    image: "{{ rabbitmq_container }}"
    state: "present"
    network: "slirp4netns"
    publish:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
      # mqtt goes all the way out
      - "0.0.0.0:1883:1883"
      - "0.0.0.0:8883:8883"
    volumes:
      - "/data/rabbitmq:/etc/rabbitmq"
      - "/etc/netmaker:/etc/netmaker"
  register: "rabbitmq_command_result"
  when: "not rabbitmq_service.stat.exists"

- name: "generate systemd service"
  ansible.builtin.shell:
    cmd: >-
      podman generate systemd --name rabbitmq >
      /etc/systemd/system/container-rabbitmq.service
    creates: "/etc/systemd/system/container-rabbitmq.service"
  when:
    - "not rabbitmq_service.stat.exists"
    - "rabbitmq_command_result.changed"

- name: "stop rabbitmq so systemd can take over"
  containers.podman.podman_container:
    name: "rabbitmq"
    image: "{{ rabbitmq_container }}"
    state: "stopped"
  when:
    - "not rabbitmq_service.stat.exists"
    - "rabbitmq_command_result.changed"

- name: "start systemd container-rabbitmq service"
  ansible.builtin.service:
    name: "container-rabbitmq"
    state: "started"
    enabled: true
    daemon-reload: true

- name: "add service to reverse proxy"
  include_tasks:
    file: "roles/caddy/tasks/add_service.yml"
    apply:
      vars:
        service: "dashboard.rabbitmq"
        caddyfile_block: |
          dashboard.rabbitmq.{{ domain }} {
            reverse_proxy /* localhost:15672
          }
          broker.rabbitmq.{{ domain }} {
            reverse_proxy /* localhost:5672
          }
