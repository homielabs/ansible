---
- name: import distro variables
  include_vars: "{{ ansible_distribution | lower }}.yml"

- name: include distro-specific pre-tasks (updating pkg cache)
  include_tasks: "{{ ansible_distribution | lower }}.yml"

- name: install baseline packages
  package:
    name:
      - vim
      - openssh-server
      - expect
      - net-tools
      - man
      - git
      - chrony
      - stow
      - gnupg
    state: present

- name: distro specific packages
  package:
    name: "{{ packages }}"
    state: present

- name: updates
  include_tasks: update_unix.yml

# Keys/certs

# - name: copy local root CA
#   copy:
#     src: "local.root.pem"
#     dest: "{{ cert_location }}"

# - name: Add local root CA to trust
#   command: "{{ cert_update_command }}"

# config

- name: install locale
  community.general.locale_gen:
    name: en_US.UTF-8
    state: present

- name: set locale
  command: localectl set-locale LANG=en_US.utf8

- name: set timezone
  community.general.timezone:
    name: America/Los_Angeles

- name: deploy dotfiles
  git:
    repo: https://github.com/guppy0130/dotfiles.git
    dest: "~/dotfiles"
    version: master

# Services

- name: copy chronyd config for containerized systemd
  copy:
    src: "chronyd"
    dest: "/etc/sysconfig/chronyd"
    mode: 0644
  when: (lookup('env', 'container') == 'docker')

- name: enable services
  include_tasks: systemd_services.yml
  loop:
    - primary: sshd
      fallback: ssh
    - primary: chronyd
      fallback: chrony
  when: (lookup('env', 'container') != 'docker')

# telegraf

- name: install telegraf if homeServer
  import_tasks: telegraf.yml
  when: "'homeServers' in group_names"

# fail2ban

- name: fail2ban if public
  import_tasks: fail2ban.yml
  when: "'bastion' in group_names"

# setup /data dir

- name: setup /data dir
  file:
    path: /data
    owner: root
    group: root
    state: directory
    mode: 0755
